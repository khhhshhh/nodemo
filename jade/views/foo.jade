doctype 5
head
  title yes~! it's.  
  script(type='text/javascript')
    console.log('fuck');
body

  // 使用缩进来表示父子节点
  #fuck.you.everyday
  #what
  #wht.sick

  // 使用 '|' 来表示文本节点的换行，防止太长写不下
  p I'm your friends 
     | but yes ~!
     | you.

  // 用#{name}来替代变量，任何js变量都可以，就是新建的也可以，不一定是locals
  span your name is #{name}
  br
  span you password is #{password}

  // 使用\#{name}来转义 
  br
  span I know how to \#{name}

  // 使用ele(name='', title='');来添加属性，每个用，隔开
  br  
  div#name
    label username:
      input(type='text', name='name' , title='shit');
  div#password
    label password:
        input(type='password', name='password', title='password')
  div#gender   
    label gender:
        input(type='radio',name='gender', value='male')
        input(type='radio',name='gender', value='female', checked)

  // 使用.来开始一个块级的元素  
  p.
      fjldasjfldsaj
  p
    | rfuck you whlewjaflejfjdsalfjdlsaj
    | fjldsajfkldsjfl;dsajfla;jl
 
  // 在当前行添加子元素用‘: ’, suck as -> li: a 
  ul
    li.first: a(href='/') fuck 
    li.list suck

  // 强大的case语句  
  div#case
    friend = 3 
    case friend
        when 3: p no friend 
        defalut: p a lot of friend

  // 可以用数组来设定类名  
  div(class=['fuck','you','everyday'])

  // 用|可以输入纯文本，用.可以输入html文本
  div#html.
    <span>what</span>
    <span>the</span>
    <span>fuck</span>

  // 运行代码用' -'来表示javascript代码 
  // 用' ='来在html代码中获取js变量
  - var time = 10
  ul#list
  - while(time--) {
  li.fuck this is a test form javascript
  = time
  - }

  // if else 语句是可以任意使用的，不用加-  
  - var i = 0
  if(i == 0) 
    p#sign i = 0 
  else   
    p#suck i = fuck

  // for 语句来遍历 ,li= fuck，用=号好像只有跟紧元素才会有效
  - var arr = ['what', 'the', 'fuck', 'of', 'you'];
  ul#mylist 
  for item in arr
    li.item= item
    li.item your item is #{item}
